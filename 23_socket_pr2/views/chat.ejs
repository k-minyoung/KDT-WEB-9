<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <script src="/socket.io/socket.io.js"></script>
    <title>Document</title>
</head>
<style>
    .me {
        display: flex;
        justify-content: right;
        width: 100%;
        color: yellow;
    }
    .other {
        display: flex;
        justify-content: left;
        width: 100px;
        color: white;
    }
    .room {
        padding: 0;
       width: 300px;
       height: 500px; 
       background-color: skyblue
    }
    /* div {
        divst-style: none;
    } */
</style>
<body>
    <ul class="room"></ul>
    <form id="chat">
        <input type="text" id="message" placeholder="채팅내용"><br />
        <button>채팅</button>
        <button type="button" onclick="leave()">나가기</button>
    </form>
    <script>
        const chatForm = document.querySelector('#chat');
        const div = document.querySelector('.room');
        //클라이언트 소켓 연결
        const socket = io();
        //채팅방 생성
        const chatRoom = prompt('채팅방명을 입력하세요');
        socket.emit('join', chatRoom);

        //브라우저 접속 시 이벤트
        socket.on('create', (res) => {
            const addDiv = document.createElement('div')
            
            addDiv.textContent = res
            addDiv.style.textAlign = 'center'
            div.appendChild(addDiv)
        });
        //서버에서 보내주는 값
        socket.on('chat',(res,id)=>{
            const addDiv = document.createElement('div')
            console.log('id',id)
            const userid = id
            if(userid === socket.id) {
                addDiv.classList.add('me')
                // addDiv.style.width='auto'
                // addDiv.style.backgroundColor = 'yellow'
                addDiv.textContent = res
                div.appendChild(addDiv)
            }else{
                addDiv.classList.add('other')
                addDiv.textContent = res
                div.appendChild(addDiv)
            }
        })
        //폼 이벤트
        chatForm.addEventListener('submit',(e)=> {
            e.preventDefault()
            const msg = chatForm.querySelector('#message')
            socket.emit('message', msg.value);
            msg.value = ''
        })
        function leave() {
            console.log('leave')
            socket.emit("leave");
        }
    </script>
</body>
</html>