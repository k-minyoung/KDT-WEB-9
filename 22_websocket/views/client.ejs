<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<body>
    <ul></ul>
    <Form id="chat">
        <input type="text" id="user" placeholder="사용자" /> <br />
        <input type="text" id="message" placeholder="채팅내용" /><br />
        <button>채팅</button>
    </Form>

    <script>
        const socket = new WebSocket('ws://localhost:8000')

        //form 가져오기
        const chatForm = document.querySelector('#chat')
        //ul가져오기
        const ul = document.querySelector('ul');


        //서버에 연결 요청
        socket.addEventListener('open', (event) => {
            //send( ) 함수는 백엔드로 메세지를 전송
            socket.send(JSON.stringify({user : "client", message: 'Hello, Server'}))
            console.log('서버에 연결되었습니다')
        })
        //메세지 주고 받음
        socket.addEventListener("message",(event)=> {
           // console.log(event)
           // console.log(`서버로부터 받은 메세지: ${event.data}`)
           const li = document.createElement('li')
           li.textContent = event.data //서버로부터 받은 메세지
           ul.appendChild(li);
        })
        //오류 이벤트
        socket.addEventListener('error', (event) => {
            console.log('오류가 발생하였습니다',event.error)
        })

        //종료 이벤트
        socket.addEventListener('close', ()=> {
            console.log('서버와 연결이 종료됨')
        })

        ///////////////////폼이벤트////////////////////
        chatForm.addEventListener('submit',(event) => { //자바스크립트로만 폼 작성하는 방법
            event.preventDefault() //submit이 있으면 써줘야함
            const user = chatForm.querySelector('#user')
            const msg = chatForm.querySelector('#message')
            //서버가 모두 nodejs가 아니기 때문에, 서버로 보내는 데이터는
            //문자열 형태로 보내야 함
            socket.send(JSON.stringify({user:user.value, message: msg.value})) //백에 메세지 보내는 방법
            msg.value = ''; //전송 후 값 비워주기
        })

    </script>
</body>
</html>